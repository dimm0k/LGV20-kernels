From c2ca11e7752ae10342e8f80ad9ceae046d97c778 Mon Sep 17 00:00:00 2001
From: arter97 <qkrwngud825@gmail.com>
Date: Thu, 11 Jun 2015 22:17:18 +0900
Subject: [PATCH] adreno_idler: fix-up type definitions

Signed-off-by: arter97 <qkrwngud825@gmail.com>
---
 drivers/devfreq/adreno_idler.c | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/drivers/devfreq/adreno_idler.c b/drivers/devfreq/adreno_idler.c
index 3a5a089b60b..4d97965db0b 100644
--- a/drivers/devfreq/adreno_idler.c
+++ b/drivers/devfreq/adreno_idler.c
@@ -40,24 +40,24 @@
 /* stats.busy_time threshold for determining if the given workload is idle.
    Any workload higher than this will be treated as non-idle workload,
    meaning the higher it gets, the slower & low-power it would get. */
-static int idleworkload = 5000;
-module_param_named(adreno_idler_idleworkload, idleworkload, int, 0664);
+static unsigned long idleworkload = 5000;
+module_param_named(adreno_idler_idleworkload, idleworkload, ulong, 0664);
 
 /* Numbers to wait before entering idle.
    The idlewait'th events before must be all idle before Adreno idler ramps
    down the frequency.
    This implementation is to prevent micro-lags on scrolling or playing games,
    meaning the lower it gets, the slower & low-power it would get. */
-static int idlewait = 20;
-module_param_named(adreno_idler_idlewait, idlewait, int, 0664);
+static unsigned int idlewait = 20;
+module_param_named(adreno_idler_idlewait, idlewait, uint, 0664);
 
 /* Taken from ondemand */
-static int downdifferenctial = 20;
-module_param_named(adreno_idler_downdifferenctial, downdifferenctial, int, 0664);
+static unsigned int downdifferenctial = 20;
+module_param_named(adreno_idler_downdifferenctial, downdifferenctial, uint, 0664);
 
 /* Master switch to activate whole routine */
-static int adreno_idler_active = 1;
-module_param_named(adreno_idler_active, adreno_idler_active, int, 0664);
+static bool adreno_idler_active = true;
+module_param_named(adreno_idler_active, adreno_idler_active, bool, 0664);
 
 static unsigned int idlecount = 0;
 
